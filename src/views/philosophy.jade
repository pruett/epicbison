extends layouts/www

block vars
  - var namespace = 'philosophy'

block content
  section.HeroSection.-contains-bg.-bruce-lee(data-hook="getBruceLee")
    .ContentWrapper(data-hook="getHeroContent")
      figure
        blockquote.headline.-quote All fixed set patterns are incapable of adaptability or pliability. The truth is outside of all fixed patterns.
        figcaption.attribute Bruce Lee

    img.hero-bg(src="images/bruce.png")

  section
    .ContentWrapper
      p.
        As software engineers, it&rsquo;s in our blood to automate and codify as much as we possibly can. The temptation to do so with process is not any different. However, in our experience, the proverbial &ldquo;one true way&rdquo; does not exist. Requirements, scope, and overall goals are unique for each project. And it&rsquo;s important to be aware of this when approaching a project. We&rsquo;ve found that by remaining flexible, we are best able to accomodate the specific needs of the client.

      p.
        Despite our apprehension towards specific doctrines, we have established a few guiding principles that drive our work:
      .BulletPoints(data-hook="getBulletPoints")

        ul.bp_bullets

          a(name="constraints")
          li.bp_bullet
            h2.bp_title Embrace constraints

            p We believe that constraints are a good thing. They guide us towards an objective solution. In our case, we embrace the constraints of our medium &mdash; the web. We understand its strengths and weaknesses. This helps us deliver the best end result.

            blockquote.twitter-tweet(lang="en")
              p(lang="en" dir="ltr")
                Constraints are fascinating. &#10;&#10;They force creativity.
              |&mdash; Henrik Joreteg (@HenrikJoreteg)
              a(href="https://twitter.com/HenrikJoreteg/status/624462761611825152") July 24, 2015
            script(async src="//platform.twitter.com/widgets.js" charset="utf-8")

            p.
              What happens when fundamental constraints are not respected? <a class="-general" href="http://www.frankchimero.com/">Frank Chimero</a> does a fantastic job speaking to these consequences in his piece entitled <a class="-general" href="http://www.frankchimero.com/writing/the-webs-grain/"><em>The Web&rsquo;s Grain</em></a>:
            blockquote.citation
              p.
                &ldquo;Listen bub,&rdquo; I say, &ldquo;it is very impressive that you can teach a bear to ride a bicycle, and it is fascinating and novel. But perhaps it’s cruel? Because that’s not what bears are supposed to do. And look, pal, that bear will never actually be good at riding a bicycle.&rdquo;

              p.
                This is how I feel about so many of the fancy websites I see. &ldquo;It is fascinating that you can do that, but it’s really not what a website is supposed to do.&rdquo;

              p.
                Most of the solidified techniques about our practice come from the natural ways of the web that have been there since the start. The answer is right there in front of us, in the website itself, and each step we take away from its intentions makes our creations weaker.

          a(name="code")
          li.bp_bullet
            h2.bp_title Deliver code over images

            p.
              Somewhere along the way, the term &ldquo;pixel perfect&rdquo; infected the design community. What followed was a focus on static deliverables (i.e. <code>.psd</code>, <code>.pdf</code>) that were highly polished but severely brittle. How can we expect a static composition to represent our interfaces when the web itself <strong>is not static</strong>? There is simply no way to account for its variability with static pixels.

            p.
              We prefer to get to code as quickly as possible and continue the process of prototyping from there. Seeing the interface &ldquo;in the wild&rdquo; with native functionality allows us to make better decisions compared to evaluating it on a motionless canvas.

          a(name="performance")
          li.bp_bullet
            h2.bp_title Performance matters

            p.
              Performance is perhaps the single most important component of a quality user experience. Countless studies conclude that slow performance leads to reduction in conversions. Essentially, the longer it takes your website to load, the more traffic you’ll lose as a result.

            p.
              With the proliferation of mobile devices and tablets, performance has become even more important. With connectivity instability and less computing power, these devices in particular require performance-driven engineering to maintain fast render times. Unfortunately, performance is often overlooked as a priority.

            p.
              We prioritize performance from the very beginning. Given our propensity to <a class="-general" href="#code">deliver live code</a> early in the lifecycle of a project, we have an advantage that many do not. We are able to assess potential bottlenecks and solve those problems early, before the project takes its final shape.

block scripts
  script(src="js/philosophy.bundle.js")
